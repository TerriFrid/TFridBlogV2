@model TFridBlog.Models.BlogPost






<div class="container">
    <div class="row">
        <div class="col">
            @using (Html.BeginForm("Edit", "BlogPosts", FormMethod.Post, new { enctype = "Multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <h2>Edit Post</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Created)
                @Html.HiddenFor(model => model.Slug)
                @Html.HiddenFor(model => model.MediaUrl)

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MediaUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.MediaUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.EditorFor(model => model.MediaUrl, new { htmlAttributes = new { @class = "form-control", @name = "image", @type = "file", @id = "fileUpload" } })*@

                        <input name="image" type="file" class="form-control" id="fileUpload" value="@Model.MediaUrl" />
                        @Html.ValidationMessageFor(model => model.MediaUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsPublished, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsPublished)
                            @Html.ValidationMessageFor(model => model.IsPublished, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-action" />

                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-dark" })
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/tinymce/tinymce.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>

    <script>
        $(function () {
            tinymce.init({
                selector: '#Body'
            })
        });
    </script>
}
